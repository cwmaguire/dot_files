" ditch all the vi compatibility nonsense
set nocompatible
set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/.eunit/*,*/.test/*,*/rel/builds/*,*.beam

nnoremap <leader>ev :vsplit ~/.vimrc.after<cr>
nnoremap <leader>sv :so ~/.vimrc.after<cr>

" clear all formatting
nnoremap <leader><space> :noh<cr>
nnoremap <leader>a :Ack! 

"Erlang Mappings

" Puts the current word in an io:format statement, e.g.
" <leader>I does it on the current line
" <leader>i does it on the line below
"Cat -> io:format(user, "Cat = ~p~n", [Cat]).
"NOTE: This uses surround (i.e. the plugin), which is why nnoremap won't work, it won't
"      recursively pick up the ysiw]
nmap <leader>I yiwysiw]iio:format(user, "<esc>pa = ~p~n", <esc>A),<esc>
nmap <leader>i yiw] jpysiw]iio:format(user, "<esc>pa = ~p~n", <esc>A),<esc>
nnoremap <leader>L oio:format(user, "~p~n", [?LINE]),<esc>

" Insert spaces between operators
"   looks for alpha, numeric or close bracket followed by
"             0 or 1 spaces followed by
"             1 or 2 equal, plus, pipe, greater than, hyphen followed by
"             0 or 1 spaces followed by
"             alpha, numeric or open bracket
" It should handle cases where there are no spaces around the operator or just one space:
"  e.g. a->b, a ->b, or a-> b
" Test patterns:
"w=a
"]++[
"a->b
"1+=b
"w =a
"1+= b
" TODO: skip where hyphen is first char
"       skip where letter, letter (only need trailing space)
nnoremap <leader>f :%s/\([[:alnum:]\]]\+\) \=\([=+\|><-]\{1,2\}\) \=\([[:alnum:]\[]\)/\1 \2 \3/gc<cr>

" Insert spaces after commas
nnoremap <leader>F :%s/\([[:alnum:]_\]]\+\),\([[:alnum:]\[]\)/\1, \2/gc<cr>

" Open up the master version of the file in a vsplit and turn on syntax " highlighting
"nnoremap <leader>m :let @a=@%<cr>:vnew<cr>:r !git show master:<C-r>a<cr>:setfiletype erlang<cr>

"delete the last character of a line (often a comma)
"nnoremap <leader>e $x
"add a comma at the end of a line
"nnoremap <leader>c A,<esc>

" use jk instead of escape so I don't have to reach the Esc key
inoremap jk <ESC>

" make it easier to increase window sizes
nnoremap <leader>j 10<C-w>-
nnoremap <leader>k 10<C-w>+
nnoremap <leader>h 10<C-w>>
nnoremap <leader>l 10<C-w><

" Make it so I only need one chord to switch windows
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" autocommand - run automatically when ...
" FileType - ... filetype changes to ...
" "erlang"
" setlocal - only for this buffer
" shiftwidth - specifies indentation
" tabstop - # of spaces a tab counts for
autocmd FileType erlang setlocal shiftwidth=4 tabstop=4 tw=100

set cursorline

" Tell the ack.vim ack fork to do searching in Ctrl-P
let g:ack_qhandler = 'CtrlPQuickfix'

" strip whitespace, make "space dots" more "in your face"
" :let @/='' sets the most recent search pattern register to an empty string
" :let @x is how you "let" to register <x>
" e.g. :let @a="bob" .. puts "bob" in register 'a'
nnoremap <leader>W :%s/\s\+$//<cr>:let @/=''<CR>

" highlight all trailing spaces in "Error" highlighting
" -----------------------------------------------------
" \v means "very magic": all characters except alphanumeric and _ have special meaning.
" see :h :s -> patterns
nnoremap <leader>w :match Error /\v\s+$/<CR>

syntax enable
set background=dark
colorscheme solarized

" Status Line Jiggery Pokery
" Use term=bold in teh user highlights for bold

hi User5 ctermbg=black    ctermfg=red    guibg=black    guifg=red    gui=bold 
hi User6 ctermbg=black                    guibg=black

set statusline=%6*
set statusline+=\ \ \   "spacing
set statusline+=%-.90t   "minimum X chars of tail of filename
set statusline+=\ \ \   "spacing
set statusline+=%y      "filetype
set statusline+=\ \ \   "spacing
set statusline+=%l      "line number
set statusline+=/
set statusline+=%L      "num of lines in file
set statusline+=\ \ \   "space
set statusline+=Col\ 
set statusline+=%-.c    "column number
set statusline+=\       "spacing
set statusline+=\ \ \   "spacing
set statusline+=%5*     "switch to User2 highlight
set statusline+=%m     "modified flag, right-align
